//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "designated_city_wards")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub designated_city_id: i64,
    pub ward_id: i64,
    #[sea_orm(column_name = "_snowflake_deleted")]
    pub snowflake_deleted: i8,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::designated_cities::Entity",
        from = "Column::DesignatedCityId",
        to = "super::designated_cities::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    DesignatedCities,
    #[sea_orm(
        belongs_to = "super::wards::Entity",
        from = "Column::WardId",
        to = "super::wards::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Wards,
}

impl Related<super::designated_cities::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DesignatedCities.def()
    }
}

impl Related<super::wards::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Wards.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
