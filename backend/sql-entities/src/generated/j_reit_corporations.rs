//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "j_reit_corporations")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    pub is_delisted: i8,
    #[sea_orm(column_name = "_snowflake_deleted")]
    pub snowflake_deleted: i8,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::j_reit_mizuho_id_mappings::Entity")]
    JReitMizuhoIdMappings,
    #[sea_orm(has_many = "super::j_reit_transactions::Entity")]
    JReitTransactions,
}

impl Related<super::j_reit_mizuho_id_mappings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::JReitMizuhoIdMappings.def()
    }
}

impl Related<super::j_reit_transactions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::JReitTransactions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
