//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "j_reit_mizuho_press_releases")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub j_reit_mizuho_building_id: String,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    #[sea_orm(column_type = "Text")]
    pub url: String,
    pub release_date: Date,
    #[sea_orm(column_name = "_snowflake_deleted")]
    pub snowflake_deleted: i8,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::j_reit_mizuho_id_mappings::Entity",
        from = "Column::JReitMizuhoBuildingId",
        to = "super::j_reit_mizuho_id_mappings::Column::JReitMizuhoBuildingId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    JReitMizuhoIdMappings,
}

impl Related<super::j_reit_mizuho_id_mappings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::JReitMizuhoIdMappings.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
