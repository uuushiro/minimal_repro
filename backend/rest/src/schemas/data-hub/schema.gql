
scalar BuildingId

scalar CityId

scalar CorporationId

"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime

scalar Decimal

scalar DesignatedCityId

scalar DetailAreaForHotelId


"""
契約開始日
"""
type GraphQLAskingContractStart {
	"""
	表示用の整形されたデータ
	"""
	formatted: String!
	"""
	ソートなどに使う生データ（「相談」に対してnullであるなど、不完全なデータなので表示には使わない）
	"""
	value: NaiveDate
}

"""
契約形態
"""
enum GraphQLAskingContractType {
	"""
	普通借
	"""
	REGULAR
	"""
	定借
	"""
	FIXED
	"""
	不明
	"""
	UNKNOWN
}

"""
募集の諸費用（敷金礼金など）
"""
type GraphQLAskingFee {
	"""
	表示用の整形されたデータ
	"""
	formatted: String!
	"""
	ソートなどに使う生データ（「相談」に対してnullであるなど、不完全なデータなので表示には使わない）
	"""
	value: Int
}

"""
募集階数
"""
type GraphQLAskingFloor {
	"""
	表示用の整形されたデータ
	"""
	formatted: String!
	"""
	ソートなどに使う生データ（1-3Fに対して1など、不完全なデータなので表示には使わない）
	"""
	value: Int!
}

"""
問い合わせ窓口（貸主など）
"""
type GraphQLAskingLeasingContact {
	"""
	取引形態
	"""
	leasingType: String!
	"""
	問い合わせ窓口（貸主など）の情報
	"""
	leasingContactDetail: GraphQLLeasingContact!
}

"""
取得するオフィス募集の条件（募集中、募集終了をそれぞれ含むかどうか）
指定しない場合は全ての募集を取得する
"""
input GraphQLAskingStatusCondition {
	"""
	募集中の募集を取得するかどうか（nullはfalseと解釈する）
	"""
	includeOpen: Boolean
	"""
	募集終了の募集を取得するかどうか（nullはfalseと解釈する）
	"""
	includeClosed: Boolean
}

"""
建物情報（各アセットタイプの建物をまとめるためのテーブル）
詳細な情報はoffice_buildingやresidential_buildingに格納される
"""
type GraphQLBuilding {
	"""
	ビルID
	"""
	id: BuildingId!
	"""
	オフィス物件のID
	"""
	officeBuildingId: OfficeBuildingId
	"""
	レジ物件のID
	"""
	residentialBuildingId: ResidentialBuildingId
	"""
	J-REITビルのID
	"""
	jReitBuildingId: JReitBuildingId
	"""
	建物名
	"""
	name: String!
	"""
	住所
	"""
	address: String!
	"""
	緯度
	"""
	latitude: Float!
	"""
	経度
	"""
	longitude: Float!
	"""
	竣工年
	"""
	completedYear: Int
	"""
	竣工月
	"""
	completedMonth: Int
	"""
	延床面積
	"""
	grossFloorArea: Float
	"""
	地上階数
	"""
	groundFloor: Int
	"""
	地下階数
	"""
	basement: Int
	"""
	市区町村ID
	"""
	cityId: CityId!
}

"""
建物の竣工年月
"""
type GraphQLBuildingCompletedOn {
	"""
	竣工年
	"""
	year: Int!
	"""
	竣工月
	"""
	month: Int
}

"""
建物画像
"""
type GraphQLBuildingImage {
	"""
	URL
	"""
	url: String!
	"""
	画像の種類
	"""
	type: GraphQLBuildingImageType!
	"""
	アプリケーション上で生成するPDFに載せて良いかどうか
	"""
	isPdfOk: Boolean!
	"""
	画像の表示順（画像種別を優先し、DPLで設定された表示順（PDF_OK最優先）とは異なる）
	"""
	displayOrder: Int!
}

"""
建物画像の種類
"""
enum GraphQLBuildingImageType {
	"""
	外観画像
	"""
	EXTERIOR_IMAGE
	"""
	内観画像
	"""
	INTERIOR_IMAGE
	"""
	その他画像
	"""
	OTHER_IMAGE
	"""
	基準階平面図
	"""
	STANDARD_FLOOR_PLAN
	"""
	平面図
	"""
	FLOOR_PLAN
}

"""
建物のリニューアル年月情報
"""
type GraphQLBuildingRenewalOn {
	"""
	リニューアル年
	"""
	year: Int!
	"""
	リニューアル月
	"""
	month: Int
}

"""
建物の階数の情報
"""
type GraphQLBuildingStory {
	"""
	地上階数
	"""
	groundFloor: Int!
	"""
	地下階数
	"""
	basement: Int!
	"""
	地下階数（移行用）
	optionalに移行する
	"""
	basementNew: Int
}

"""
建物の用途
"""
enum GraphQLBuildingUse {
	"""
	オフィス
	"""
	OFFICE
	"""
	商業施設
	"""
	RETAIL
	"""
	住宅
	"""
	RESIDENTIAL
	"""
	物流施設
	"""
	LOGISTIC
	"""
	ホテル
	"""
	HOTEL
	"""
	不明
	"""
	UNKNOWN
}

"""
市区町村（政令指定都市は区ごとに分けている）
"""
type GraphQLCity {
	id: CityId!
	"""
	町名（「丸の内」「大手町」など）
	nullの場合があるので注意
	"""
	name: String
	"""
	所属するサブマーケットのID
	"""
	submarketId: Int
	"""
	代表点の緯度
	"""
	latitude: Float!
	"""
	代表点の経度
	"""
	longitude: Float!
	"""
	この町名が所属する市区町村
	"""
	ward: GraphQLWard!
	"""
	この町名が所属するサブマーケット
	"""
	submarket: GraphQLSubmarket
	"""
	地区のオフィスビルの平均賃料履歴（円/坪）
	"""
	officeBuildingAverageRentHistories: [GraphQLOfficeBuildingRent]!
}

"""
企業情報（テナントなど）
"""
type GraphQLCorporation {
	id: CorporationId!
	"""
	法人番号（https://www.houjin-bangou.nta.go.jp/setsumei/index.html）
	"""
	corporationNumber: Int!
	"""
	法人名
	"""
	name: String!
	"""
	住所
	"""
	address: String!
	website: String
}

"""
政令指定都市
"""
type GraphQLDesignatedCity {
	id: DesignatedCityId!
	"""
	都市名
	"""
	name: String!
	"""
	この政令指定都市が所属する都道府県
	"""
	prefecture: GraphQLPrefecture!
	"""
	政令指定都市の区
	"""
	wards: [GraphQLWard!]!
}

"""
詳細エリア（"銀座"など）
"""
type GraphQLDetailAreaForHotel {
	id: DetailAreaForHotelId!
	name: String!
	"""
	この詳細エリアが所属する小エリア（"上野・浅草・両国"など）
	"""
	smallArea: GraphQLSmallAreaForHotel!
	"""
	詳細エリア内の町名（丸の内など）
	"""
	cities: [GraphQLCity!]!
}

"""
ホテルのデータ（テストデータ）
"""
type GraphQLHotelBuilding {
	id: HotelBuildingId!
	"""
	建物名
	"""
	name: String!
	"""
	種別
	"""
	type: String!
	"""
	住所
	"""
	address: String!
	"""
	アクセス
	"""
	access: String
	"""
	緯度
	"""
	latitude: Float!
	"""
	経度
	"""
	longitude: Float!
	"""
	画像
	"""
	imageUrl: String!
	"""
	部屋の画像
	"""
	roomImageUrl: String
	"""
	部屋に関するデータ
	"""
	rooms: GraphQLHotelRooms!
	"""
	レビュー
	"""
	review: GraphQLHotelReview!
	"""
	設備
	"""
	facilities: String!
	"""
	開業年
	"""
	openingYear: Int
	"""
	リノベーション年
	"""
	renovationYear: Int
	"""
	宿泊料金（平均）
	"""
	price: Int
	"""
	宿泊プラン
	"""
	stayPlans: [GraphQLHotelStayPlan!]!
}

type GraphQLHotelReview {
	"""
	件数
	"""
	count: Int
	"""
	平均点数
	"""
	average: Decimal
}

type GraphQLHotelRooms {
	"""
	部屋の総数
	"""
	totalNumber: Int
	"""
	シングルルームの数
	"""
	singleNumber: Int
	"""
	ダブルルームの数
	"""
	doubleNumber: Int
	"""
	ツインルームの数
	"""
	twinNumber: Int
	"""
	スイートルームの数
	"""
	suiteNumber: Int
	"""
	シングルルームの面積 TODO: 単位は？
	"""
	singleArea: String
	"""
	ダブルルームの面積
	"""
	doubleArea: String
	"""
	ツインルームの面積
	"""
	twinArea: String
	"""
	スイートルームの面積
	"""
	suiteArea: String
}

"""
ホテルの宿泊プラン（テストデータ）
"""
type GraphQLHotelStayPlan {
	id: HotelStayPlanId!
	"""
	部屋タイプ
	"""
	roomType: String
	"""
	平均価格
	"""
	price: Int!
	"""
	曜日毎の平均価格
	"""
	priceByDayOfWeek: GraphQLHotelStayPlanPriceByDayOfWeek!
}

type GraphQLHotelStayPlanPriceByDayOfWeek {
	mon: Int
	tue: Int
	wed: Int
	thu: Int
	fri: Int
	sat: Int
	sun: Int
}

type GraphQLJReitAppraisalHistory {
	id: JReitAppraisalHistoryId!
	jReitBuildingId: JReitBuildingId!
	"""
	鑑定日
	"""
	appraisedDate: NaiveDate!
	"""
	鑑定価格［円］
	"""
	appraisedPrice: Int!
}

"""
Jリート物件のデータ
参考になるかも: https://nabra-estie.atlassian.net/wiki/spaces/AC/pages/1748174129/J-REIT
"""
type GraphQLJReitBuilding {
	id: JReitBuildingId!
	"""
	オフィスビルID
	"""
	officeBuildingId: OfficeBuildingId
	"""
	住居ビルID
	"""
	residentialBuildingId: ResidentialBuildingId
	"""
	資産タイプ
	"""
	assetType: GraphQLJReitBuildingAssetType!
	"""
	建物基本データ
	"""
	buildingSpec: GraphQLJReitBuildingBuildingSpec!
	"""
	土地基本データ
	"""
	landSpec: GraphQLJReitBuildingLandSpec!
	"""
	投資法人コード
	"""
	reit: String!
	"""
	所有権情報
	"""
	ownership: GraphQLJReitBuildingOwnership!
	"""
	取得情報
	"""
	acquisition: GraphQLJReitBuildingAcquisition!
	"""
	譲渡情報
	"""
	transfer: GraphQLJReitBuildingTransfer!
	"""
	利回り評価
	"""
	yieldEvaluation: GraphQLJReitBuildingYieldEvaluation!
	"""
	PM会社
	"""
	propertyManager: String
	"""
	調査会社
	"""
	inspectionCompany: String
	"""
	受託行
	"""
	trustee: String
	"""
	上場廃止しているか否か
	"""
	isDelisted: Boolean!
	createdAt: DateTime!
	updatedAt: DateTime!
	"""
	決算データ
	firstとlastの両方が指定された場合、firstが優先される
	"""
	financials(first: Int, last: Int): [GraphQLJReitFinancial!]!
	"""
	投資法人データ
	"""
	jReitCorporation: GraphQLJReitCorporation!
	"""
	プレスリリースデータ
	"""
	pressReleases: [GraphQLJReitPressRelease!]!
	"""
	鑑定評価の履歴
	"""
	appraisalHistories: [GraphQLJReitAppraisalHistory!]!
	"""
	キャップレートの履歴
	"""
	capRateHistories: [GraphQLJReitCapRateHistory!]!
	"""
	建物基本データ
	"""
	building: GraphQLBuilding @deprecated(reason: "GraphQLBuilding はまだ作りかけで、具体的なユースケースも固まっていないので、データの移送を止めています")
	"""
	所在する町（「丸の内」など）
	"""
	city: GraphQLCity
}

"""
Jリート物件の取得情報
"""
type GraphQLJReitBuildingAcquisition {
	"""
	売主
	"""
	initialAcquisitionSeller: String
	"""
	取得日
	"""
	acquisitionDate: NaiveDate
	"""
	取得価格
	"""
	acquisitionPrice: Int
	"""
	取引時の貸付有効面積［坪］あたりの取得価格
	"""
	acquisitionPricePerInitialNetLeasableAreaTotal: Decimal
	"""
	取得時鑑定価格
	"""
	initialAppraisedPrice: Int
	"""
	取引時の貸付有効面積［坪］あたりの取得時鑑定価格
	"""
	initialAppraisedPricePerInitialNetLeasableAreaTotal: Decimal
	"""
	取得時の貸付有効面積［坪］
	"""
	initialNetLeasableAreaTotal: Decimal
	"""
	取得時還元利回り（直接還元法）［%］
	参考：https://www.ownersbook.jp/blog/basics_of_real_estate_investment/capitalization_approach/
	"""
	initialCapRate: Decimal
	"""
	取得時最終還元利回り（DCF法）［%］
	参考：同上
	"""
	initialTerminalCapRate: Decimal
	"""
	取得時割引率（DCF法）
	参考：同上
	"""
	initialDiscountedCapRate: Decimal
}

"""
Jリート物件の資産タイプ
複数の資産タイプを持つことがある（オフィス兼住宅など）
"""
type GraphQLJReitBuildingAssetType {
	"""
	オフィス
	"""
	isOffice: Boolean!
	"""
	商業
	"""
	isRetail: Boolean!
	"""
	ホテル
	"""
	isHotel: Boolean!
	"""
	駐車場
	"""
	isParking: Boolean!
	"""
	工場
	"""
	isIndustrial: Boolean!
	"""
	物流施設
	"""
	isLogistic: Boolean!
	"""
	住宅
	"""
	isResidential: Boolean!
	"""
	医療施設
	"""
	isHealthCare: Boolean!
	"""
	その他
	"""
	isOther: Boolean!
	"""
	用途詳細
	"""
	useDetail: String
}

"""
Jリート物件の建物基本データ
"""
type GraphQLJReitBuildingBuildingSpec {
	"""
	物件名
	"""
	name: String!
	"""
	住所
	"""
	address: String
	"""
	緯度
	"""
	latitude: Float
	"""
	経度
	"""
	longitude: Float
	"""
	最寄駅
	"""
	nearestStation: String
	"""
	竣工年
	"""
	completedYear: Int
	"""
	竣工月
	"""
	completedMonth: Int
	"""
	延床面積［坪］
	"""
	grossFloorArea: Decimal
	"""
	貸付有効面積［坪］
	"""
	netLeasableAreaTotal: Decimal
	"""
	全体建物専有面積［坪］
	"""
	buildingExclusiveAreaTotal: Decimal
	"""
	地下階数
	"""
	basement: Int
	"""
	地上階数
	"""
	groundFloor: Int
	"""
	構造
	"""
	structure: String
	"""
	間取（住宅）
	"""
	floorPlan: String
	"""
	戸数（住宅）・客室数（ホテル）
	"""
	residenceNumUnitsOrHotelNumRooms: Int
}

"""
Jリート物件の土地基本データ
"""
type GraphQLJReitBuildingLandSpec {
	"""
	敷地面積［坪］
	"""
	land: Decimal
	"""
	建蔽率
	"""
	buildingCoverageRatio: Decimal
	"""
	容積率
	"""
	floorAreaRatio: Decimal
}

"""
Jリート物件の所有権情報
"""
type GraphQLJReitBuildingOwnership {
	"""
	土地所有形態
	"""
	landOwnershipType: String
	"""
	土地所有割合［%］
	"""
	landOwnershipRatio: Decimal
	"""
	建物所有形態
	"""
	buildingOwnershipType: String
	"""
	建物所有割合［%］
	"""
	buildingOwnershipRatio: Decimal
}

"""
J-REIT物件の並び替えとページネーションの条件
"""
input GraphQLJReitBuildingSortAndPaginateCondition {
	"""
	並び替え条件
	"""
	sort: GraphQLJReitBuildingSortCondition
	"""
	ページネーション条件
	"""
	pagination: GraphQLPaginateCondition
}

"""
J-REIT物件の並び替え条件
"""
input GraphQLJReitBuildingSortCondition {
	"""
	並び替えのキー
	"""
	key: GraphQLJReitBuildingSortKey!
	"""
	並び替えの順序
	"""
	order: GraphQLSortOrder!
}

"""
J-REIT物件の並び替えキー
"""
enum GraphQLJReitBuildingSortKey {
	"""
	竣工年
	"""
	COMPLETED_YEAR
	"""
	敷地面積
	"""
	LAND_AREA
	"""
	延床面積
	"""
	GROSS_FLOOR_AREA
	"""
	貸付有効面積
	"""
	NET_LEASABLE_AREA_TOTAL
	"""
	キャップレート
	"""
	CAP_RATE
	"""
	取得時キャップレート
	"""
	INITIAL_CAP_RATE
	"""
	鑑定価格
	"""
	APPRAISED_PRICE
	"""
	取得時鑑定価格
	"""
	INITIAL_APPRAISED_PRICE
	"""
	取得価格
	"""
	ACQUISITION_PRICE
	"""
	取得日
	"""
	ACQUISITION_DATE
	"""
	投資法人名
	"""
	J_REIT_CORPORATION_NAME
}

"""
Jリート物件の譲渡情報
"""
type GraphQLJReitBuildingTransfer {
	"""
	譲渡日
	"""
	transferDate: NaiveDate
	"""
	譲渡価格
	"""
	transferPrice: Int
	"""
	譲渡先企業
	"""
	transfereeCompany: String
}

"""
Jリート物件の利回り評価
"""
type GraphQLJReitBuildingYieldEvaluation {
	"""
	最新キャップレート（直接還元法）（想定NOI/最新鑑定価格*100）［%］
	"""
	capRate: Decimal
	"""
	想定NOI（年間収益ー年間費用）［円］
	"""
	estimatedNetOperatingIncome: Int
	"""
	積算価格［円］
	"""
	priceByCostApproach: Int
	"""
	積算価格の建物分［円］
	"""
	buildingPriceByCostApproach: Int
	"""
	積算価格の土地分［円］
	"""
	landPriceByCostApproach: Int
	"""
	最新鑑定価格［円］
	"""
	appraisedPrice: Int
	"""
	最新鑑定日
	"""
	appraisedDate: NaiveDate
	"""
	鑑定会社
	"""
	appraisalCompany: String
}

type GraphQLJReitCapRateHistory {
	id: JReitCapRateHistoryId!
	jReitBuildingId: JReitBuildingId!
	"""
	キャップレート［%］
	"""
	capRate: Decimal!
	"""
	決算期の締め日（初回は初回取得日）
	"""
	closingDate: NaiveDate!
}

"""
J-REITの投資法人情報
"""
type GraphQLJReitCorporation {
	"""
	投資法人ID
	"""
	id: JReitCorporationId!
	"""
	名称
	"""
	name: String!
	"""
	投資法人コード（投資法人を表すアルファベット3文字の記号）
	"""
	code: String!
	"""
	上場廃止しているか否か
	"""
	isDelisted: Boolean!
}

"""
Jリート物件の決算データ
参考になるかも: https://nabra-estie.atlassian.net/wiki/spaces/AC/pages/1846937864
"""
type GraphQLJReitFinancial {
	id: JReitFinancialId!
	jReitBuildingId: JReitBuildingId!
	"""
	決算期に関するデータ
	"""
	fiscalPeriod: GraphQLJReitFinancialFiscalPeriod!
	"""
	収入に関するデータ
	"""
	income: GraphQLJReitFinancialIncome!
	"""
	支出に関するデータ
	"""
	expense: GraphQLJReitFinancialExpense!
	"""
	収支に関するデータ
	"""
	balance: GraphQLJReitFinancialBalance!
	"""
	賃貸状況に関するデータ
	"""
	leasing: GraphQLJReitFinancialLeasing!
	"""
	物件の鑑定データ
	"""
	appraisal: GraphQLJReitFinancialAppraisal!
	"""
	運用指標データ
	"""
	indicators: GraphQLJReitFinancialIndicators!
	"""
	取得額［円］
	"""
	acquisitionPrice: Int
	"""
	帳簿価格［円］
	"""
	bookValue: Int
	"""
	敷金残高［円］
	"""
	securityDepositBalance: Int
	"""
	固定資産税予定額［円］
	"""
	scheduledPropertyTax: Int
}

"""
物件の鑑定データ
"""
type GraphQLJReitFinancialAppraisal {
	"""
	鑑定価格
	"""
	appraisalPrice: Int
	"""
	直接還元法 収益価格［円］
	"""
	directCapitalizationPrice: Int
	"""
	直接還元法 利回り［%］
	"""
	capRate: Decimal
	"""
	DCF法 収益価格［円］
	"""
	discountCashFlowPrice: Int
	"""
	DCF法 割引率［%］
	"""
	discountRate: Decimal
	"""
	DCF法 最終還元利回り［%］
	"""
	terminalCapRate: Decimal
	"""
	鑑定キャップレート（削除予定）［%］
	"""
	appraisalCapRate: Decimal
	"""
	鑑定割引率（削除予定）［%］
	"""
	appraisalDiscountRate: Decimal
}

"""
収支に関するデータ
"""
type GraphQLJReitFinancialBalance {
	"""
	NOI
	"""
	netOperatingIncome: Int
	"""
	減価償却費
	"""
	depreciation: Int
	"""
	利益（NOI-減価償却費）
	"""
	netIncome: Int
	"""
	フリーキャッシュフロー
	"""
	freeCashFlow: Int
}

"""
支出に関するデータ
"""
type GraphQLJReitFinancialExpense {
	"""
	管理委託料
	"""
	propertyManagement: Int
	"""
	保守点検料
	"""
	maintenance: Int
	"""
	給水光熱費
	"""
	utility: Int
	"""
	警備委託料
	"""
	security: Int
	"""
	修繕費
	"""
	repair: Int
	"""
	清掃費
	"""
	cleaning: Int
	"""
	損害保険料
	"""
	insurance: Int
	"""
	固定資産税等
	"""
	realEstateTax: Int
	"""
	共益費支出
	"""
	camFee: Int
	"""
	その他の支出
	"""
	other: Int
	"""
	資本的支出
	"""
	capitalExpenditure: Int
}

"""
決算期
"""
type GraphQLJReitFinancialFiscalPeriod {
	"""
	名称（「第3期」など）
	"""
	name: String
	"""
	開始日
	"""
	startDate: NaiveDate!
	"""
	終了日
	"""
	endDate: NaiveDate!
	"""
	運用日数
	"""
	operatingDays: Int!
}

"""
収入に関するデータ
"""
type GraphQLJReitFinancialIncome {
	"""
	賃料収入
	"""
	rent: Int
	"""
	駐車料収入
	"""
	parking: Int
	"""
	共益費収入
	"""
	camFee: Int
	"""
	その他の賃料収入
	"""
	otherRentalIncome: Int
	"""
	その他の収入
	"""
	other: Int
}

"""
運用指標データ
"""
type GraphQLJReitFinancialIndicators {
	"""
	貸室賃料収入単価［円/月・坪］
	"""
	rentalIncomePerTsubo: Int
	"""
	直近1年間のNOI［円］
	"""
	yearToDateNetOperatingIncome: Int
	"""
	NOI利回り（NOI/取得価格の年換算）［%］
	"""
	netOperatingIncomeYield: Decimal
	"""
	純収益利回り（年換算）［%］
	"""
	netCashFlowCapRate: Decimal
}

"""
賃貸状況に関するデータ
"""
type GraphQLJReitFinancialLeasing {
	"""
	稼働率
	"""
	occupancyRate: Decimal
	"""
	賃貸先数
	"""
	numberOfTenants: Int
	"""
	賃貸可能面積［坪］
	"""
	netLeasableAreaTotal: Decimal
}

type GraphQLJReitPressRelease {
	id: JReitPressReleaseId!
	jReitBuildingId: JReitBuildingId!
	"""
	プレスリリースタイトル
	"""
	title: String!
	"""
	プレスリリースURL
	"""
	url: String!
	"""
	プレスリリース公開日
	"""
	releaseDate: NaiveDate!
}

"""
大エリア（"東京23区内"など）
"""
type GraphQLLargeAreaForHotel {
	id: LargeAreaForHotelId!
	name: String!
	"""
	この大エリアが所属する都道府県
	"""
	prefecture: GraphQLPrefecture!
	"""
	大エリア内の小エリア（"上野・浅草・両国"など）
	"""
	smallAreasForHotel: [GraphQLSmallAreaForHotel!]!
}

"""
問い合わせ窓口（貸主など）
"""
type GraphQLLeasingContact {
	"""
	問い合わせ窓口（貸主など）ID
	"""
	id: LeasingContactId!
	"""
	名称
	"""
	name: String!
	"""
	住所
	"""
	address: String
	"""
	電話番号
	"""
	phoneNumber: String
	"""
	FAX番号
	"""
	faxNumber: String
}

"""
鉄道路線
"""
type GraphQLLine {
	id: LineId!
	name: String!
	"""
	路線のイメージカラーのカラーコード
	"""
	colorCode: String
	"""
	路線アイコンが保存されているURL
	"""
	iconPath: String
	"""
	この路線が所属する鉄道会社
	"""
	railCorp: GraphQLRailCorp
	"""
	路線内の駅
	"""
	stations: [GraphQLStation!]!
}

"""
オフィス建物のデータ
"""
type GraphQLLogisticsBuilding {
	id: LogisticsBuildingId!
	"""
	建物名
	"""
	name: String!
	"""
	住所
	"""
	address: String
	"""
	緯度
	"""
	latitude: Float!
	"""
	経度
	"""
	longitude: Float!
	"""
	施設プラン（BTS or マルチテナント）
	"""
	buildingPlan: GraphQLLogisticsBuildingPlan
	"""
	竣工年月
	"""
	completedOn: GraphQLBuildingCompletedOn
	"""
	階数
	"""
	story: GraphQLBuildingStory
	"""
	構造
	"""
	structure: String
	"""
	耐震基準
	"""
	earthquakeResistance: String
	"""
	延床面積［坪］
	"""
	grossFloorArea: Decimal
	"""
	貸付有効面積［坪］
	"""
	netLeasableAreaTotal: Decimal
	"""
	敷地面積［坪］
	"""
	landArea: Decimal
	"""
	天井高［mm］
	"""
	floorHeight: String
	"""
	床荷重［kg］
	"""
	floorLoading: String
	"""
	柱間
	"""
	pillarSpan: String
	"""
	危険物保管可否
	"""
	canStoreHazardousMaterials: Boolean
	"""
	冷蔵・冷凍保管可否
	"""
	canStoreFrozenAndRefrigerated: Boolean
	"""
	設備
	"""
	equipment: GraphQLLogisticsBuildingEquipment!
	"""
	駐車場・道路・アクセス
	"""
	parkingAndAccess: GraphQLLogisticsBuildingParkingAndAccess!
	"""
	REIT情報
	"""
	reitInfo: GraphQLLogisticsBuildingReitInfo!
	"""
	解体されているかどうか
	"""
	isDemolished: Boolean!
	createdAt: DateTime!
	updatedAt: DateTime!
	"""
	所在する町（「丸の内」など）
	"""
	city: GraphQLCity!
}

"""
物流施設のアクセス方法
参考: https://www.nomura-landport.com/facility.html
"""
enum GraphQLLogisticsBuildingAccessMethod {
	"""
	ランプウェイ
	"""
	RAMP_WAY
	"""
	スロープ
	"""
	SLOPE
	"""
	ボックス
	"""
	BOX
}

"""
物流施設の設備情報
"""
type GraphQLLogisticsBuildingEquipment {
	"""
	エレベーター台数
	"""
	elevator: Int
	"""
	貨物エレベーター台数
	"""
	freightElevator: Int
	"""
	垂直搬送機台数
	"""
	verticalTransferMachine: Int
	"""
	空調
	"""
	airConditioner: String
	"""
	非常用発電機の有無
	"""
	hasEmergencyGenerator: Boolean
	"""
	その他設備
	"""
	other: String
}

"""
物流施設の駐車場・道路・アクセス情報
"""
type GraphQLLogisticsBuildingParkingAndAccess {
	"""
	アクセス方法
	"""
	accessMethod: GraphQLLogisticsBuildingAccessMethod
	"""
	アクセス階の数
	"""
	accessMethodCount: Int
	"""
	アクセス階
	"""
	accessFloor: String
	"""
	乗用車駐車台数
	"""
	passengerCarParkingLot: Int
	"""
	トラック駐車台数
	"""
	truckParkingLot: Int
	"""
	berth数
	berth: 倉庫や物流センターなどでトラックが接車して荷物を積み下ろすスペース
	"""
	berthCount: Int
	"""
	接道数
	"""
	connectionCount: Int
	"""
	全面道路幅員［m］
	"""
	frontRoadWidth: Decimal
	"""
	トラック入口数
	"""
	truckEntranceCount: Int
}

"""
物流施設の施設プラン（BTS or マルチテナント）
"""
enum GraphQLLogisticsBuildingPlan {
	"""
	BTS
	"""
	BTS
	"""
	マルチテナント
	"""
	MULTI_TENANT
	"""
	シングルテナント
	"""
	SINGLE_TENANT
}

"""
物流施設の駐車場・道路・アクセス情報
"""
type GraphQLLogisticsBuildingReitInfo {
	"""
	取得価格［百万円］
	"""
	acquisitionPrice: Decimal
	"""
	鑑定価格［百万円］
	"""
	appraisalPrice: Decimal
	"""
	キャップレート［%］
	"""
	capRate: Decimal
	"""
	賃料収入［百万円］
	"""
	totalRentalIncome: Decimal
	"""
	稼働率［%］
	"""
	utilizationRate: Decimal
}

"""
都道府県、市区町村、町名をまとめたもの
"""
type GraphQLMunicipalities {
	prefectures: [GraphQLPrefecture!]!
	designatedCities: [GraphQLDesignatedCity!]!
	wards: [GraphQLWard!]!
	cities: [GraphQLCity!]!
}

"""
近隣の駅
"""
type GraphQLNearbyStation {
	"""
	徒歩分数
	"""
	timeRequired: Int!
	"""
	距離（m）（近い順に取得する）
	"""
	distance: Decimal!
	"""
	駅データ
	"""
	station: GraphQLStation!
}

"""
テナント情報
"""
type GraphQLOccupier {
	"""
	テナントID
	"""
	id: OccupierId!
	"""
	テナント名
	"""
	name: String!
	"""
	このテナントに関連する企業情報
	"""
	corporation: GraphQLCorporation
}

"""
物件に入居しているテナントの情報
"""
type GraphQLOccupierBuilding {
	"""
	ビルID
	"""
	buildingId: OfficeBuildingId!
	"""
	テナントID
	"""
	occupierId: OccupierId!
	estimatedMoveInDate: NaiveDate
	estimatedMoveOutDate: NaiveDate
	strFloor: String
	floor: GraphQLAskingFloor!
	"""
	このテナント所有ビルに関連するテナント情報
	"""
	occupier: GraphQLOccupier!
}

"""
オフィス募集のデータ
"""
type GraphQLOfficeAsking {
	id: OfficeAskingId!
	"""
	階数
	"""
	floor: GraphQLAskingFloor!
	"""
	部屋番号
	"""
	roomNumber: String
	"""
	面積［坪］
	"""
	area: Decimal
	"""
	用途
	"""
	use: String
	"""
	賃料［円/坪］
	"""
	rent: Int
	"""
	共益費［円/坪］
	"""
	camFee: Int
	"""
	敷金［ヶ月］
	"""
	deposit: GraphQLAskingFee
	"""
	礼金［ヶ月］
	"""
	gratuityFee: GraphQLAskingFee
	"""
	償却費［ヶ月］
	"""
	moveOutFee: GraphQLAskingFee
	"""
	入居可能日
	"""
	contractStart: GraphQLAskingContractStart
	"""
	契約期間［年］
	"""
	contractTerm: Int
	"""
	契約形態
	"""
	contractType: GraphQLAskingContractType!
	"""
	図面
	"""
	layoutImgUrl: String
	"""
	募集終了しているかどうか
	"""
	isClosed: Boolean!
	"""
	募集開始日
	"""
	openedDate: NaiveDate
	"""
	募集終了日
	"""
	closedDate: NaiveDate
	"""
	情報確認日
	"""
	confirmedOn: NaiveDate!
	createdAt: DateTime!
	updatedAt: DateTime!
	"""
	問い合わせ窓口
	"""
	leasingContacts: [GraphQLAskingLeasingContact!]!
	"""
	建物情報
	"""
	building: GraphQLOfficeBuilding!
}

"""
オフィス建物のデータ
"""
type GraphQLOfficeBuilding {
	id: OfficeBuildingId!
	"""
	建物名
	"""
	name: String!
	"""
	住所
	"""
	address: String!
	"""
	緯度
	"""
	latitude: Float!
	"""
	経度
	"""
	longitude: Float!
	"""
	竣工年月
	"""
	completedOn: GraphQLBuildingCompletedOn
	"""
	リニューアル年月
	"""
	renewalOn: GraphQLBuildingRenewalOn
	"""
	階数
	"""
	story: GraphQLBuildingStory
	"""
	構造
	"""
	structure: String
	"""
	耐震基準
	"""
	earthquakeResistance: String
	"""
	延床面積［坪］
	"""
	grossFloorArea: Decimal
	"""
	推定延床面積［坪］
	"""
	estimatedGrossFloorArea: Decimal
	"""
	基準階面積［坪］
	"""
	standardFloorArea: Decimal
	"""
	推定基準階面積［坪］
	"""
	estimatedStandardFloorArea: Decimal
	"""
	貸付有効面積［坪］
	"""
	netLeasableAreaTotal: Decimal
	"""
	天井高［mm］
	"""
	floorHeight: Int
	"""
	床荷重［kg］
	"""
	floorLoading: Int
	"""
	建物用途
	"""
	buildingUse: GraphQLBuildingUse!
	"""
	設計者
	"""
	architect: String
	"""
	設備
	"""
	equipment: GraphQLOfficeBuildingEquipment!
	"""
	グレード（estieが設定）（https://nabra-estie.atlassian.net/wiki/spaces/BUS/pages/1470071849）
	"""
	grade: String
	"""
	推定賃料（estieが機械学習で推定したもの）
	"""
	eRent: Int
	"""
	敷地面積［坪］
	"""
	land: Decimal
	"""
	REIT物件であるかどうか
	"""
	isReit: Boolean!
	"""
	解体されているかどうか
	"""
	isDemolished: Boolean!
	createdAt: DateTime!
	updatedAt: DateTime!
	"""
	所在する町（「丸の内」など）
	"""
	city: GraphQLCity!
	"""
	画像
	"""
	images: [GraphQLBuildingImage!]!
	"""
	近隣の駅
	"""
	nearbyStations: [GraphQLNearbyStation!]!
	"""
	募集情報
	"""
	askings: [GraphQLOfficeAsking]!
	"""
	最新の賃料
	"""
	rent: GraphQLOfficeBuildingLatestRent
	"""
	賃料履歴
	"""
	rentHistories: [GraphQLOfficeBuildingRent]!
	"""
	空室率（%）
	即入居可の募集から集計
	"""
	vacancyRate: Decimal
	"""
	潜在空室率（%）
	即入居可でないものも含めた募集から集計
	"""
	potentialVacancyRate: Decimal
	"""
	問い合わせ窓口（募集ごとの問い合わせ窓口を集計したもの）
	募集情報を見る権限に関わらず表示できる
	"""
	leasingContacts: [GraphQLLeasingContact!]!
	buildingCertifications: [GraphQLOfficeBuildingCertification!]!
	"""
	入居者建物
	"""
	occupierBuildings: [GraphQLOccupierBuilding!]!
}

type GraphQLOfficeBuildingCertification {
	buildingId: OfficeBuildingId!
	"""
	用途を表すカテゴリー変数
	1: OFFICE
	2: RETAIL
	3: RESIDENTIAL
	4: LOGISTICS
	5: HOTEL
	
	https://nabra-estie.slack.com/archives/C04C77X8HMM/p1737942327638729?thread_ts=1737731875.056479&cid=C04C77X8HMM
	"""
	buildingUse: Int!
	certifiedYear: Int!
	owner: String!
	rank: Int!
	remarks: String!
}

"""
オフィス建物の設備情報
"""
type GraphQLOfficeBuildingEquipment {
	"""
	警備
	"""
	security: String
	"""
	駐車場台数
	"""
	parkingLot: Int
	"""
	エレベーター台数
	"""
	elevator: Int
	"""
	空調
	"""
	airConditioner: String
	"""
	非常用発電機（「重油発電48」のようなデータで種別と供給可能時間を表していて、末尾に「時間」をつけると正しい表記になる）
	"""
	emergencyGenerator: String
	"""
	OAフロア有無
	"""
	oaFloor: Boolean
}

"""
ビルの最新賃料データ
"""
type GraphQLOfficeBuildingLatestRent {
	"""
	賃料（円/坪）
	"""
	rent: Int!
}

"""
ビルの賃料履歴データ
"""
type GraphQLOfficeBuildingRent {
	"""
	年
	"""
	year: Int!
	"""
	月
	"""
	month: Int!
	"""
	賃料（円/坪）
	"""
	rent: Int!
}

"""
ページネーション設定（指定された順序で offset+1 件目から offset+limit 件目までを取得できる）
"""
input GraphQLPaginateCondition {
	"""
	オフセット
	"""
	offset: Int!
	"""
	表示件数
	"""
	limit: Int!
}

"""
都道府県
"""
type GraphQLPrefecture {
	id: PrefectureId!
	name: String!
	"""
	地方区分内での表示順
	"""
	displayOrder: Int!
	"""
	この都道府県が所属する地方区分
	"""
	region: GraphQLRegion!
	"""
	都道府県内の政令指定都市
	"""
	designatedCities: [GraphQLDesignatedCity!]!
	"""
	都道府県内の市区町村
	"""
	wards: [GraphQLWard!]!
	"""
	都道府県内の大エリア（"東京23区内"など）
	"""
	largeAreasForHotel: [GraphQLLargeAreaForHotel!]!
}

"""
鉄道会社（地方ごとにグルーピングされている）
"""
type GraphQLRailCorp {
	id: RailCorpId!
	name: String!
	"""
	地方区分内での表示順
	"""
	displayOrder: Int!
	"""
	この鉄道会社が所属する地方区分
	"""
	region: GraphQLRegion!
	"""
	鉄道会社が持つ路線
	"""
	lines: [GraphQLLine!]!
}

"""
地方区分
"""
type GraphQLRegion {
	id: RegionId!
	name: String!
	displayOrder: Int!
	prefectures: [GraphQLPrefecture!]!
	"""
	地方区分内の鉄道会社
	"""
	railCorps: [GraphQLRailCorp!]!
}

type GraphQLResidentialAsking {
	buildingId: Int!
	closedTargetYm: NaiveDate
	floorPlan: String
	isRental: Boolean!
	moneyComboPerTsubo: Float
	moneyCombo: Int!
	moneyKoushin: Int
	moneyKyoueki: Int
	moneyReikin: Int
	moneyRoom: Int!
	moneyShikikin: Int
	newDate: NaiveDate!
	reformDate: NaiveDate
	renovationDate: NaiveDate
	roomFloor: Int
	targetYm: NaiveDate!
	unitArea: Float
	unitId: ResidentialAskingId!
	unitName: String
	unitTags: [String!]
	windowAngle: String
}

type GraphQLResidentialBuilding {
	buildingId: ResidentialBuildingId!
	buildingName: String
	longitude: Float!
	latitude: Float!
	yearBuilt: NaiveDate
	fullAddress: String
	unitCount: Int
	floorCount: Int
	basementFloorCount: Int
	buildingStructure: String
	normalizedBuildingStructure: String
	totalFloorArea: Float
	buildingType: String
	cityAddress: String
	cityId: CityId!
	wardId: WardId!
	prefectureId: PrefectureId!
	buildingTags: [String!]
	numOpenAskings: Int!
	numClosedAskings: Int!
	condominiumRental: Boolean!
	autoLock: Boolean!
	petFriendly: Boolean!
	deliveryBox: Boolean!
	allDayGarbageDisposalAllowed: Boolean!
	parkingLot: Boolean!
	bicycleParking: Boolean!
	motorcycleParking: Boolean!
	elevator: Boolean!
	energyEfficientPerformance: Boolean!
	freeInternet: Boolean!
	askings: [GraphQLResidentialAsking!]!
}

"""
建物の検索条件
"""
input GraphQLSearchBuildingCondition {
	"""
	建物名
	"""
	name: String
	"""
	住所
	"""
	address: String
	"""
	中心点の緯度
	"""
	latitude: Float
	"""
	中心点の経度
	"""
	longitude: Float
	"""
	検索半径（km）
	"""
	radiusKm: Float
	"""
	最小竣工年
	"""
	minCompletedYear: Int
	"""
	最大竣工年
	"""
	maxCompletedYear: Int
	"""
	最小延床面積
	"""
	minGrossFloorArea: Float
	"""
	最大延床面積
	"""
	maxGrossFloorArea: Float
	"""
	最小地上階数
	"""
	minGroundFloor: Int
	"""
	最大地上階数
	"""
	maxGroundFloor: Int
	"""
	ビルID
	"""
	ids: [BuildingId!]
	"""
	市区町村ID
	"""
	cityIds: [CityId!]
	"""
	オフィスビルID
	"""
	officeBuildingIds: [OfficeBuildingId!]
	"""
	住居ビルID
	"""
	residentialBuildingIds: [ResidentialBuildingId!]
	"""
	J-REITビルID
	"""
	jReitBuildingIds: [JReitBuildingId!]
	"""
	一度に取得する件数
	"""
	size: Int
}

"""
物件を指定する検索条件（入力用）
物件IDが空の場合はこの条件が無かったことになる
"""
input GraphQLSearchConditionDesignatedBuildings {
	"""
	指定する物件のID
	"""
	buildingIds: [Int!]!
	"""
	距離［m］
	"""
	radius: Int!
}

"""
緯度軽度の検索条件
"""
input GraphQLSearchConditionLatLng {
	"""
	北端の緯度
	"""
	north: Float!
	"""
	南端の緯度
	"""
	south: Float!
	"""
	東端の経度
	"""
	east: Float!
	"""
	西端の経度
	"""
	west: Float!
}

"""
所在地（自治体）の検索条件
"""
input GraphQLSearchConditionLocation {
	prefectureIds: [PrefectureId!]
	"""
	政令指定都市IDについては、DPL移行時にIDが変化する可能性があるため、保存する場合は注意
	移行できるようにはする予定ですが、ward_idに変換して保存する方が安全です
	"""
	designatedCityIds: [DesignatedCityId!]
	wardIds: [WardId!]
	cityIds: [CityId!]
}

input GraphQLSearchConditionMinMax {
	min: Int
	max: Int
}

input GraphQLSearchConditionMinMaxDate {
	min: NaiveDate
	max: NaiveDate
}

input GraphQLSearchConditionMinMaxFloat {
	min: Float
	max: Float
}

input GraphQLSearchConditionStation {
	stationIds: [StationId!]
	"""
	徒歩分数（最大）
	"""
	maxTime: Int!
	"""
	徒歩分数（最小）
	"""
	minTime: Int
}

"""
企業の検索条件
"""
input GraphQLSearchCorporationCondition {
	"""
	建物名（部分一致）
	"""
	name: String
	"""
	法人番号（https://www.houjin-bangou.nta.go.jp/setsumei/index.html）
	64-bit integer
	"""
	corporationNumbers: [String!]
}

"""
ホテル物件の検索条件
"""
input GraphQLSearchHotelBuildingCondition {
	"""
	建物名
	"""
	name: String
	"""
	所在地（都道府県、市区町村、町名）
	"""
	location: GraphQLSearchConditionLocation
	"""
	駅
	"""
	station: GraphQLSearchConditionStation
	"""
	観光地
	"""
	touristSpot: GraphQLSearchHotelBuildingConditionTouristSpot
	"""
	物件と半径の指定
	"""
	designatedHotelBuildings: GraphQLSearchConditionDesignatedBuildings
	"""
	客室数
	"""
	numberOfRooms: GraphQLSearchConditionMinMax
	"""
	竣工年（今のところ竣工年がないので仮で開業年でやっている）
	"""
	completedYear: GraphQLSearchConditionMinMax
	"""
	延床面積［坪］（未実装）
	"""
	grossFloorArea: GraphQLSearchConditionMinMax
	"""
	料金
	"""
	price: GraphQLSearchConditionMinMax
	"""
	ホテルタイプ
	"""
	hotelTypes: GraphQLSearchHotelBuildingConditionHotelType
	"""
	設備
	"""
	facilities: GraphQLSearchHotelBuildingConditionFacilities
}

"""
ホテルの設備の検索条件（AND条件、nullはfalseと同じ）
"""
input GraphQLSearchHotelBuildingConditionFacilities {
	"""
	レストラン
	"""
	restaurant: Boolean
	"""
	会議室
	"""
	meetingRoom: Boolean
	"""
	宴会場
	"""
	banquetHall: Boolean
	"""
	大浴場
	"""
	largePublicBath: Boolean
	"""
	ジム
	"""
	gym: Boolean
	"""
	プール
	"""
	pool: Boolean
	"""
	駐車場
	"""
	parking: Boolean
}

"""
ホテルのタイプの検索条件
全て未指定またはfalseの場合は全てのタイプを含む検索になる
"""
input GraphQLSearchHotelBuildingConditionHotelType {
	"""
	ラグジュアリーホテル
	"""
	luxuryHotel: Boolean
	"""
	ビジネスホテル
	"""
	businessHotel: Boolean
	"""
	シティホテル
	"""
	cityHotel: Boolean
	"""
	アパートメントホテル
	"""
	apartmentHotel: Boolean
	"""
	リゾートホテル
	"""
	resortHotel: Boolean
	"""
	旅館
	"""
	japaneseStyleInn: Boolean
	"""
	その他
	"""
	others: Boolean
}

"""
観光地の検索条件
"""
input GraphQLSearchHotelBuildingConditionTouristSpot {
	"""
	観光地ID
	"""
	touristSpotIds: [TouristSpotId!]
	"""
	徒歩分数（20分まで） TODO: 20分以上必要ならデータを生成
	maxは必須
	"""
	maxTime: Int!
	minTime: Int
}

"""
ホテル物件の検索結果
"""
type GraphQLSearchHotelBuildingResult {
	"""
	該当のホテル
	"""
	hotelBuildings: [GraphQLHotelBuilding!]!
	"""
	ヒットした件数
	"""
	totalCount: Int!
}

"""
Jリート物件の検索条件
"""
input GraphQLSearchJReitBuildingCondition {
	"""
	建物名
	"""
	name: String
	"""
	投資法人ID
	"""
	jReitCorporationIds: [String!]
	"""
	所在地（都道府県、市区町村、町名）
	設定時点で約1%ほどcity_idがnullのデータが存在し、それらはこの条件では検索できない
	"""
	location: GraphQLSearchConditionLocation
	"""
	駅
	"""
	station: GraphQLSearchConditionStation
	"""
	緯度軽度
	設定する場合は緯度軽度、最大最小の全ての値を設定する必要がある
	"""
	latitudeAndLongitude: GraphQLSearchConditionLatLng
	"""
	竣工年
	"""
	completedYear: GraphQLSearchConditionMinMax
	"""
	敷地面積（坪）
	"""
	landArea: GraphQLSearchConditionMinMax
	"""
	延床面積（坪）
	"""
	grossFloorArea: GraphQLSearchConditionMinMax
	"""
	貸付有効面積（坪）
	"""
	netLeasableAreaTotal: GraphQLSearchConditionMinMax
	"""
	取引日
	"""
	acquisitionDate: GraphQLSearchConditionMinMaxDate
	"""
	取得価格
	"""
	acquisitionPrice: GraphQLSearchConditionMinMax
	"""
	鑑定額
	"""
	appraisedPrice: GraphQLSearchConditionMinMax
	"""
	取得時キャップレート
	"""
	initialCapRate: GraphQLSearchConditionMinMaxFloat
	"""
	最新キャップレート
	"""
	capRate: GraphQLSearchConditionMinMaxFloat
	"""
	譲渡日
	"""
	transferDate: GraphQLSearchConditionMinMaxDate
	"""
	アセットタイプ（or検索、1件でもtrueがある場合trueになっているアセットのどれかに合致する物件を返す）
	"""
	assetType: GraphQLSearchJReitBuildingConditionAssetType
	"""
	譲渡済みか否か（trueで譲渡済みのみ、falseで保有中のみ、Noneでどちらも）
	"""
	isTransferred: Boolean
	"""
	上場廃止か否か（trueで上場廃止のみ、falseで上場中のみ、Noneでどちらも）
	"""
	isDelisted: Boolean
	"""
	緯度経度が設定されているか（trueで緯度経度が設定されている物件のみ、false か None でどちらも）
	"""
	excludeEmptyCoordinates: Boolean
}

"""
Jリート物件のアセットタイプ検索条件
全て未指定またはfalseの場合は全てのアセットタイプを含む検索になる
"""
input GraphQLSearchJReitBuildingConditionAssetType {
	isOffice: Boolean
	isRetail: Boolean
	isHotel: Boolean
	isParking: Boolean
	isIndustrial: Boolean
	isLogistic: Boolean
	isResidential: Boolean
	isHealthCare: Boolean
	isOther: Boolean
}

"""
J-REIT物件の検索結果
"""
type GraphQLSearchJReitBuildingResult {
	"""
	該当のJ-REIT物件
	"""
	jReitBuildings: [GraphQLJReitBuilding!]!
	"""
	ヒットした件数
	"""
	totalCount: Int!
}

"""
オフィス物件の検索条件
"""
input GraphQLSearchOfficeBuildingCondition {
	"""
	建物名（部分一致）
	"""
	name: String
	"""
	竣工年
	"""
	minCompletedYear: Int
	maxCompletedYear: Int
	"""
	延床面積
	"""
	minGrossFloorArea: Float
	maxGrossFloorArea: Float
	"""
	駅からの距離で検索
	"""
	searchByStations: SearchByStations
	"""
	区ID（複数指定可）
	"""
	wardIds: [Int!]
	"""
	都道府県ID（複数指定可）
	"""
	prefectureIds: [Int!]
	"""
	市区町村ID（複数指定可）
	"""
	cityIds: [Int!]
	"""
	検索結果の最大件数
	"""
	limit: Int! = 30
}

input GraphQLSearchResidentialBuildingsCondition {
	wardIds: [Int!]! = []
	cityIds: [Int!]! = []
	prefectureIds: [Int!]! = []
	brandIds: [Int!]! = []
	stations: GraphQLSearchResidentialBuildingsSearchByStations
	buildings: GraphQLSearchResidentialBuildingsSearchByBuildings
	map: GraphQLSearchResidentialBuildingsSearchByMap
	circles: [GraphQLSearchResidentialBuildingsSearchByCircles!]! = []
	"""
	竣工年
	"""
	minCompletedYear: Int
	maxCompletedYear: Int
	"""
	構造（どれかに完全一致）
	"""
	structures: [String!]
	"""
	建物種別（どれかに完全一致）
	"""
	buildingTypes: [String!]
	"""
	総戸数
	"""
	minUnitCount: Int
	maxUnitCount: Int
	"""
	（ビルとして）x階建て以上
	"""
	minFloorCount: Int
	"""
	「分譲賃貸」かどうか
	「分譲賃貸以外」「分譲賃貸のみ」「両方」を選べる
	"""
	condominiumFilterType: GraphQLSearchResidentialBuildingsCondominiumFilter! = ALL
	"""
	以下は全て、***_requiredがtrueの場合、***というカラムがtrueであるもののみを検索する
	"""
	autoLockRequired: Boolean! = false
	petFriendlyRequired: Boolean! = false
	deliveryBoxRequired: Boolean! = false
	allDayGarbageDisposalAllowedRequired: Boolean! = false
	parkingLotRequired: Boolean! = false
	bicycleParkingRequired: Boolean! = false
	motorcycleParkingRequired: Boolean! = false
	elevatorRequired: Boolean! = false
	energyEfficientPerformanceRequired: Boolean! = false
	freeInternetRequired: Boolean! = false
	"""
	FloorPlanが指定されたどれかに完全一致（間取り）
	"""
	floorPlans: [String!]! = []
	"""
	WindowAngleが指定されたどれかに完全一致（窓の向き、角部屋でも「東・南」のような並列表記はしていないので完全一致で良い）
	"""
	windowAngles: [String!]! = []
	"""
	UnitAreaが指定された範囲内
	"""
	minArea: Int
	maxArea: Int
	"""
	RoomFloorが指定された範囲内
	"""
	minFloor: Int
	maxFloor: Int
	"""
	MoneyComboPerTsuboが指定された範囲内
	"""
	minRentPerTsubo: Int
	maxRentPerTsubo: Int
	"""
	MoneyComboが指定された範囲内
	"""
	minRent: Int
	maxRent: Int
	"""
	ClosedTargetYmが指定された範囲内
	maxがnullならClosedTargetYmがnullのもの（募集中）も含む
	"""
	minClosedDate: NaiveDate
	maxClosedDate: NaiveDate
	"""
	募集中の募集を含むか（募集中はClosedTargetYm=nullで判定）
	募集を1件も含まない物件は検索結果に表示されないので、募集中の募集か終了した募集かは含めるようにする必要がある。
	"""
	includeOpenAskings: Boolean! = false
	"""
	募集を1件も含まない物件は検索結果に表示されないので、募集中の募集か終了した募集かは含めるようにする必要がある。
	"""
	includeClosedAskings: Boolean! = false
	"""
	募集のタグが指定されたものを全て含む
	"""
	tags: [String!]! = []
	"""
	trueなら、ReformDateがnullでないもののみ
	"""
	isReformOnly: Boolean! = false
	"""
	trueなら、RenovationDateがnullでないもののみ
	"""
	isRenovationOnly: Boolean! = false
}

enum GraphQLSearchResidentialBuildingsCondominiumFilter {
	ONLY_CONDOMINIUM
	EXCLUDE_CONDOMINIUM
	ALL
}

input GraphQLSearchResidentialBuildingsSearchByBuildings {
	buildingIds: [ResidentialBuildingId!]!
	keywords: [String!]!
	distance: Int
}

input GraphQLSearchResidentialBuildingsSearchByCircles {
	latitude: Float!
	longitude: Float!
	radiusKm: Float!
}

input GraphQLSearchResidentialBuildingsSearchByMap {
	minLatitude: Float!
	maxLatitude: Float!
	minLongitude: Float!
	maxLongitude: Float!
}

input GraphQLSearchResidentialBuildingsSearchByStations {
	stationIds: [StationId!]! = []
	lineIds: [LineId!]! = []
	minMinutes: Int
	maxMinutes: Int
}

"""
小エリア（"上野・浅草・両国"など）
"""
type GraphQLSmallAreaForHotel {
	id: SmallAreaForHotelId!
	name: String!
	"""
	この小エリアが所属する大エリア（"東京23区内"など）
	"""
	largeArea: GraphQLLargeAreaForHotel!
	"""
	小エリア内の詳細エリア（"銀座"など）
	"""
	detailAreas: [GraphQLDetailAreaForHotel!]!
}

"""
並び替えの順序
"""
enum GraphQLSortOrder {
	"""
	昇順
	"""
	ASC
	"""
	降順
	"""
	DESC
}

"""
駅
"""
type GraphQLStation {
	id: StationId!
	name: String!
	latitude: Float!
	longitude: Float!
	"""
	この駅が所属する路線（複数ありうる）
	"""
	lines: [GraphQLLine!]!
}

"""
サブマーケット（「大丸有」など）
"""
type GraphQLSubmarket {
	id: SubmarketId!
	"""
	サブマーケット名
	"""
	name: String!
	"""
	このサブマーケットが所属する市区町村
	"""
	ward: GraphQLWard!
}

"""
観光地
"""
type GraphQLTouristSpot {
	id: TouristSpotId!
	"""
	観光地名
	"""
	name: String!
	"""
	住所
	"""
	address: String!
	"""
	緯度
	"""
	latitude: Float
	"""
	経度
	"""
	longitude: Float
}

"""
市区町村（政令指定都市は区ごとに分けている）
"""
type GraphQLWard {
	id: WardId!
	"""
	市区町村名（政令指定都市は区ごとに分けている）
	"""
	name: String!
	prefecture: GraphQLPrefecture!
	"""
	市区町村内の町名
	"""
	cities: [GraphQLCity!]!
}

scalar HotelBuildingId

scalar HotelStayPlanId



scalar JReitAppraisalHistoryId

scalar JReitBuildingId

scalar JReitCapRateHistoryId

scalar JReitCorporationId

scalar JReitFinancialId

scalar JReitPressReleaseId

scalar LargeAreaForHotelId

scalar LeasingContactId

scalar LineId

scalar LogisticsBuildingId

"""
ISO 8601 calendar date without timezone.
Format: %Y-%m-%d

# Examples

* `1994-11-13`
* `2000-02-24`
"""
scalar NaiveDate

scalar OccupierId

scalar OfficeAskingId

scalar OfficeBuildingId

scalar PrefectureId

type QueryRoot {
	"""
	地方区分の一覧
	ここからネストして都道府県、市区町村や鉄道会社、路線を取得できる
	"""
	regions: [GraphQLRegion!]!
	"""
	都道府県のデータ
	"""
	prefecture(id: PrefectureId!): GraphQLPrefecture!
	"""
	市区町村のデータ
	"""
	ward(id: WardId!): GraphQLWard!
	"""
	町名のデータ
	"""
	city(id: CityId!): GraphQLCity!
	"""
	町名のデータ（複数取得）
	指定されたIDの全てで該当データがあることは保証していないので注意
	"""
	cities(ids: [CityId!]!): [GraphQLCity!]!
	"""
	地域区分（都道府県、市区町村、町名）の名前検索
	部分一致で取得するが、前方一致が優先される
	"""
	searchMunicipalities(name: String!): GraphQLMunicipalities!
	"""
	観光地の名前検索
	部分一致で取得するが、前方一致が優先される
	"""
	searchTouristSpots(name: String!): [GraphQLTouristSpot!]!
	"""
	鉄道路線のデータ
	"""
	line(id: LineId!): GraphQLLine!
	"""
	駅のデータ
	"""
	station(id: StationId!): GraphQLStation!
	"""
	駅のデータ（複数取得）
	指定されたIDの全てで該当データがあることは保証していないので注意
	"""
	stations(ids: [StationId!]!): [GraphQLStation!]!
	"""
	駅の名称検索
	部分一致で検索するが、前方一致を優先する
	"""
	searchStations(name: String!): [GraphQLStation!]!
	"""
	企業（テナント等）のデータ
	"""
	corporations(ids: [CorporationId!]!): [GraphQLCorporation!]!
	"""
	企業（テナント等）の名称検索
	アルファベットは全角
	上限20件まで取得
	"""
	searchCorporations(searchCondition: GraphQLSearchCorporationCondition!): [GraphQLCorporation!]!
	"""
	オフィスビルのデータ
	"""
	officeBuilding(id: OfficeBuildingId!): GraphQLOfficeBuilding
	"""
	オフィスビルのデータ（複数取得）
	指定されたIDの全てで該当データがあることは保証していないので注意
	"""
	officeBuildings(ids: [OfficeBuildingId!]!): [GraphQLOfficeBuilding]!
	"""
	オフィスビルの検索
	"""
	searchOfficeBuildings(searchCondition: GraphQLSearchOfficeBuildingCondition!): [GraphQLOfficeBuilding!]!
	"""
	オフィス募集のデータ
	"""
	officeAskings(officeBuildingId: OfficeBuildingId!, askingStatusCondition: GraphQLAskingStatusCondition): [GraphQLOfficeAsking]!
	"""
	物流施設のデータ（複数取得）
	指定されたIDの全てで該当データがあることは保証していないので注意
	入力のIDの順序を保持する
	"""
	logisticsBuildings(ids: [LogisticsBuildingId!]!, pagination: GraphQLPaginateCondition): [GraphQLLogisticsBuilding!]!
	"""
	Jリート物件のデータ
	IDを指定するとそのIDの物件のみ、指定しない場合は全ての物件を取得する
	"""
	jReitBuildings(ids: [JReitBuildingId!], sortAndPagination: GraphQLJReitBuildingSortAndPaginateCondition): [GraphQLJReitBuilding]!
	"""
	Jリート物件のデータをオフィスビルIDで取得する（データがないビルも当然ある）
	MRでの仕様に合わせて上場廃止物件は除外している
	"""
	jReitBuildingByOfficeBuildingIds(officeBuildingIds: [OfficeBuildingId!]!): [GraphQLJReitBuilding]!
	"""
	Jリート投資法人の一覧
	"""
	jReitCorporations(includeDelisted: Boolean! = true): [GraphQLJReitCorporation!]!
	"""
	Jリート物件データの検索
	"""
	searchJReitBuildings(searchCondition: GraphQLSearchJReitBuildingCondition!, sortAndPagination: GraphQLJReitBuildingSortAndPaginateCondition): GraphQLSearchJReitBuildingResult!
	"""
	ホテル（テストデータ）
	"""
	hotelBuilding(id: HotelBuildingId!): GraphQLHotelBuilding
	"""
	ホテルの検索（テストデータ）
	"""
	searchHotelBuildings(searchCondition: GraphQLSearchHotelBuildingCondition!, pagination: GraphQLPaginateCondition): GraphQLSearchHotelBuildingResult!
	searchResidentialBuildings(input: GraphQLSearchResidentialBuildingsCondition!): [GraphQLResidentialBuilding!]!
	"""
	検索条件に一致する住宅物件の件数を返します
	"""
	countResidentialBuildings(input: GraphQLSearchResidentialBuildingsCondition!): Int!
	"""
	検索条件に一致する物件のデータを返します
	"""
	searchBuildings(input: GraphQLSearchBuildingCondition!): [GraphQLBuilding!]!
}

scalar RailCorpId

scalar RegionId

scalar ResidentialAskingId

scalar ResidentialBuildingId

"""
駅からの距離で検索するリクエスト
"""
input SearchByStations {
	stationIds: [StationId!]!
	"""
	指定した駅からの最大徒歩分数
	徒歩の速度を80m/分として半径を算出し、その円内に含まれている物件を返す
	"""
	timeRequired: Int!
}

scalar SmallAreaForHotelId

scalar StationId


scalar SubmarketId

scalar TouristSpotId

scalar WardId

directive @deprecated(reason: String = "No longer supported") on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION | ENUM_VALUE
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @specifiedBy(url: String!) on SCALAR
schema {
	query: QueryRoot
}

